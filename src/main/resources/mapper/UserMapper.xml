<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="exam.user.mapper.UserMapper" >
	<resultMap type="exam.user.bean.UserBean" id="UserBeanResultMap">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="account_name" property="accountName" jdbcType="VARCHAR"/>
		<result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
		<result column="identity_Num" property="identityNum" jdbcType="VARCHAR"/>
		<result column="identity_type" property="identityType" jdbcType="VARCHAR"/>
		<result column="NAME" property="name" jdbcType="VARCHAR"/>
		<result column="tel" property="tel" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		
		
        <collection property="roles" ofType="exam.user.bean.SysRoleBean">
            <result column="role_name" property="name"  jdbcType="VARCHAR"/>
            <result column="role_id" property="id"  jdbcType="INTEGER"/>
            <result column="role_mark" property="mark"  jdbcType="VARCHAR"/>
        </collection>
	</resultMap>
	
	<sql id="userInfoAllField">
			a.id,
			a.account_name,
			a.PASSWORD,
			a.create_time,
			u.identity_Num,
			u.identity_type,
			u.NAME,
			u.tel,
			r.name role_name,
			r.id role_id,
			r.mark role_mark	
	</sql>



	<!-- 插入账户信息 -->
	<insert id="addAcctInfo"  useGeneratedKeys="true" keyProperty="id"  parameterType="exam.user.bean.UserBean">
		insert into account(account_name, password, create_time) values(#{accountName}, #{password}, now())
	</insert>
	
	
	<!-- 插入用户详细信息 -->
	<insert id="addUseDtlInfo" parameterType="exam.user.bean.UserBean">
		INSERT INTO user_dtl (
			acct_id,
			NAME,
			tel,
			identity_Num,
			identity_type
		)
		VALUES(
			#{id},
		    #{name},
		    #{tel},
		    #{identityNum},
		    #{identityType}
		)
	</insert>
	
	<insert id="insertSysUserRole">
		INSERT INTO sys_user_role (
			user_id,
			role_id
		)
		VALUES(
			#{userId},
		    #{roleId}
		)
	</insert>
	
	
	<select id="findUserById"  parameterType="int" resultMap="UserBeanResultMap">
		SELECT
			<include refid="userInfoAllField"></include>
		FROM
			account a
		inner join user_dtl u on a.id = u.acct_id
		left join sys_user_role ur on a.id = ur.user_id
		left join sys_role r on ur.role_id = r.id
		WHERE a.id = #{id}
	</select>	
	
	
	
	<select id="findUserInfoByAccountName" resultMap="UserBeanResultMap">
		SELECT
			<include refid="userInfoAllField"></include>
		FROM
			account a
		inner join user_dtl u on a.id = u.acct_id
		left join sys_user_role ur on a.id = ur.user_id
		left join sys_role r on ur.role_id = r.id
		WHERE a.account_name = #{accountName}
	</select>

	<update id="updateUserDtl" parameterType="exam.user.bean.UserBean">
		UPDATE user_dtl
		SET NAME = #{name},
			 tel = #{tel},
			 identity_Num = #{identityNum},
			 identity_type = #{identityType}
		WHERE
			acct_id = #{id}
	</update>
	
	<update id="updateUserPassword" parameterType="exam.user.bean.UserBean">
		UPDATE account
		SET password = #{password}
		WHERE
			id = #{id}
	</update>
	
	<update id="updateUserPasswordById">
		UPDATE account
		SET password = #{newPassword}
		WHERE
			id = #{userId}
	</update>
	
	
	
	<select id="qryUserList" resultMap="UserBeanResultMap" parameterType="exam.user.bean.UserBean">
		SELECT
			<include refid="userInfoAllField"></include>
		FROM
			account a
		inner join user_dtl u on a.id = u.acct_id
		left join sys_user_role ur on a.id = ur.user_id
		left join sys_role r on ur.role_id = r.id
		<where>
		    <if test="accountName != null and accountName != ''">
		        and a.account_name = #{accountName}
		    </if>
		    <if test="tel != null and tel != ''">
		        and u.tel = #{tel}
		    </if>	
		    <if test="name != null and name != ''">
		        and  u.NAME = #{name}
		    </if>
		    <if test="identityNum != null and identityNum != ''">
		       and   u.identity_Num = #{identityNum}
		    </if>
		    <if test="identityType != null and identityType != ''">
		       and   u.identity_type = #{identityType}
		    </if>	
		    <if test="roles != null and roles.size > 0 and roles[0].name != '' ">
		        and  r.name = #{roles[0].name}
		    </if>
		</where>
		order by a.create_time desc
	</select>
	
	<delete id="deleteAccount"  parameterType="int[]">
		delete from account where id in
		<foreach collection="array" item = "id" index="index" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	
</mapper>


